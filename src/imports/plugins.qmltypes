import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.

Module {
    Component {
        name: "QQuickWebViewLoadRequest"
        prototype: "QObject"
        exports: ["QtWebView/WebViewLoadRequest 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "url"; type: "QUrl"; isReadonly: true }
        Property { name: "status"; type: "QQuickWebView::LoadStatus"; isReadonly: true }
        Property { name: "errorString"; type: "string"; isReadonly: true }
    }
    Component {
        name: "QWebView"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["QtWebView/WebView 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "url"; type: "QUrl" }
        Property { name: "loading"; type: "bool"; isReadonly: true }
        Property { name: "loadProgress"; type: "int"; isReadonly: true }
        Property { name: "title"; type: "string"; isReadonly: true }
        Property { name: "canGoBack"; type: "bool"; isReadonly: true }
        Property { name: "canGoForward"; type: "bool"; isReadonly: true }
        Method { name: "goBack" }
        Method { name: "goForward" }
        Method { name: "reload" }
        Method { name: "stop" }
        Signal {
            name: "loadingChanged"
            Parameter { name: "loadRequest"; type: "QQuickWebViewLoadRequest"; isPointer: true }
        }
        Method {
            name: "loadHtml"
            Parameter { name: "html"; type: "string" }
            Parameter { name: "baseUrl"; type: "QUrl" }
        }
        Method {
            name: "loadHtml"
            Parameter { name: "html"; type: "string" }
        }
        Method {
            name: "runJavaScript"
            Parameter { name: "script"; type: "string" }
            Parameter { name: "callback"; type: "QJValue" }
        }
        Method {
            name: "runJavaScript"
            Parameter { name: "script"; type: "string" }
        }
    }
}
